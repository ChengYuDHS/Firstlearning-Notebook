#define _CRT_SECURE_NO_WARNINGS 1 
#include<stdio.h>
#include <string.h>

int main (){
	
	//printf("%d\n",strlen("c:\test\121"));//7
	
	// sizeof 出来的单位是字节
	
	//~按二进制位取反
	//int a = 0;
	//int b = ~a;
	//printf("%d\n", b);//-1,负数在内存中是二进制的补码

	//++
	//int a = 10;
	//int b = a++;//后置++，先赋值，a再加1
	//int c = ++a;//前置++， a先加一，再赋值
	//printf("a = %d, b = %d, c = %d\n", a, b, c);//12 10 12

	//操作符 (类型) 强制类型转换
	//int a = (int)3.14;
	//printf("a = %d\n", a);

	//逻辑与 &&		 逻辑或 ||		零为假，非零为真

	//三目操作符 条件操作符 exp1 ? exp2 : exp3	若表达式1为真，则执行2，否则3
	//int a = 10;	int b = 20;	int max;
	//max = a >= b ? a : b;
	//printf("%d\n", max);//20


	//原码反码与补码
	//只要是整数，内存中储存的就是二进制补码，原码安进制变换得到，原码符号位不变，其他位取反得到反码，反码加一的带补码

	//关键字
	//auto 一般都是省略掉的 break case continue default extern goto 等等 register寄存器关键字 访问速度：寄存器》高速缓存》内存》硬盘
	//register int a = 10;//建议把a定义成寄存器变量
	//signed/unsigned 定义符号与非符号数（非负）	struct 结构体 union 共用体 typedef类型定义 stactic
	//typedef unsigned int u_int;
	//u_int num = 2;

	//static 修饰局部变量，其生命周期变长 
	//int i = 0;
	//while (i < 5)
	//{
	//	test();
	//	i++;
	//}
	//static 修饰全局变量，其作用域发生变化，让静态全局变量只能在其所在源文件内部使用，除了源文件就无法使用
	//extern int g;
	//printf("g = %d\n", g);
	//static修饰函数，改变了函数的连接属性，由外部链接属性改为内部链接属性
	//int a = 10;
	//int b = 20;
	//int z = ADD(a, b);
	//printf("%d\n", z);

	//#define可以定义标识符常量，也可以定义宏
	//int a = 10;
	//int b = 20;
	//int z = MAX(a, b);//宏的使用，代码会被替换为 z = (a>b?a:b)
	//printf("%d\n", z);

	//指针与内存
	//1. 如何划分内存	2. 
	//32位64位是指多少根地址线/数据线，可产生2^32和2^64个地址，每个地址含有一个字节的数据量
	//有一种变量是用来存储地址的----指针变量
	//int a = 10;
	//int* p = &a;//指针变量的数据类型，指针的数据类型应与其指向的变量类型相同，再加个*。32位平台，指针大小4个字节，64位8个字节
	//*p = 20;//解引用操作符,通过p的地址找到对应的变量进行操作
	//printf("%p\n", p);
	//printf("%d\n", a);
	//printf("%d\n", sizeof(p));//32位指针大小4个字节
	
	
	
	return 0;
}
