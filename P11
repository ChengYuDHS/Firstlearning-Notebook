#define _CRT_SECURE_NO_WARNINGS 1 
#include<stdio.h>
#include<string.h>

void print(int n)
{
	if (n > 9)
	{
		print(n / 10);
	}
	printf("%d ", n % 10);
}

int my_strlen1(char* str)
{
	int count = 0;
	while (*str != '\0')
	{
		count++;
		str++;
	}
	return count;
}

int my_strlen2(char* str)
{
	if (*str != 0)
	{
		return 1 + my_strlen2(str+1);
	}
	else
	{
		return 0;
	}
}

int main ()
{
	//函数递归：函数自己调用自己
	//stack overflow 递归常见错误：栈溢出
	//内存分城几个部分：栈区，堆区，静态区。分别存储——栈区：局部变量，函数形参；堆区：动态开辟的内存；静态区：全局变量，static修饰的变量

	//接受一个整型数（无符号），按顺序打印他的每一位
	//unsigned int n;
	//scanf("%d", &n);
	//print(n);
	//递归的两个必要条件：1. 必须有限制条件，当满足条件时，递归不再继续	2. 每次递归之后都更接近于这个限制条件

	char arr[] = "bit";
	//printf("%d\n", strlen(arr));
	//int len = my_strlen(arr);//传字符串第一位字符的地址
	printf("%d\n", my_strlen2(arr));

	
	
	return 0;
}
